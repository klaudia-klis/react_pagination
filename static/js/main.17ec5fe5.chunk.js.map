{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","lastPage","Math","ceil","className","cn","disabled","href","onClick","numberOfPages","result","i","push","createArray","map","number","active","items","from","to","numbers","n","getNumbers","App","useState","setCurrentPage","setPerPage","sortPages","itemsPerPage","sortedPages","length","slice","firstItemOnPage","at","lastItemOnPage","name","id","onChange","event","target","value","defaultValue","htmlFor","page","ReactDOM","render","document","getElementById"],"mappings":"oNASaA,EAAa,SAAC,GAEH,IADtBC,EACqB,EADrBA,MAAOC,EACc,EADdA,QAASC,EACK,EADLA,YAAaC,EACR,EADQA,aAYvBC,EAAWC,KAAKC,KAAKN,EAAQC,GAEnC,OACE,mCACE,qBAAIM,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAG,YAAa,CAC7BC,SAA0B,IAAhBP,IADZ,SAIE,mBACE,UAAQ,WACRK,UAAU,YACVG,KAAI,WAAMR,EAAc,GACxB,gBAA+B,IAAhBA,EAAoB,OAAS,QAC5CS,QAAS,WACa,IAAhBT,GACFC,EAAaD,EAAc,IAPjC,oBAnBY,SAACU,GAGnB,IAFA,IAAMC,EAAS,GAENC,EAAI,EAAGA,GAAKF,EAAeE,GAAK,EACvCD,EAAOE,KAAKD,GAGd,OAAOD,EA2BFG,CAAYZ,GAAUa,KAAI,SAAAC,GACzB,OACE,oBAEEX,UAAWC,IAAG,YAAa,CACzBW,OAAQD,IAAWhB,IAHvB,SAME,mBACE,UAAQ,WACRK,UAAU,YACVG,KAAI,WAAMQ,GACVP,QAAS,WACHT,IAAgBgB,GAClBf,EAAae,IANnB,SAUGA,KAfEA,MAoBX,oBAAIX,UAAWC,IAAG,YAAa,CAC7BC,SAAUP,IAAgBE,IAD5B,SAIE,mBACE,UAAQ,WACRG,UAAU,YACVG,KAAI,WAAMR,EAAc,GACxB,gBAAeA,IAAgBE,EAC3B,OAAS,QACbO,QAAS,WACHT,IAAgBE,GAClBD,EAAaD,EAAc,IARjC,0BCpEJkB,ECLC,SAAoBC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQR,KAAKS,GAGf,OAAOD,EDFKE,CAAW,EAAG,IAEfC,EAAgB,WAC3B,MAAsCC,mBAAS,GAA/C,mBAAOzB,EAAP,KAAoB0B,EAApB,KACA,EAA8BD,mBAAS,GAAvC,mBAAO1B,EAAP,KAAgB4B,EAAhB,KAYMC,EAAY,SAACC,GAGjB,IAFA,IAAMC,EAAc,GAEXlB,EAAI,EAAGA,EAAIM,EAAMa,OAAQnB,GAAKiB,EACrCC,EAAYjB,KAAKK,EAAMc,MAAMpB,EAAGA,EAAIiB,IAGtC,OAAOC,GAGHG,EAAkBL,EAAU7B,GAASC,EAAc,GAAGkC,GAAG,GACzDC,EAAiBP,EAAU7B,GAASC,EAAc,GAAGkC,IAAI,GAE/D,OACE,sBAAK7B,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWL,EADX,mBACiCiC,EADjC,cACsDE,EADtD,aAIA,sBAAK9B,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE+B,KAAK,kBACL,UAAQ,kBACRC,GAAG,kBACHhC,UAAU,eACViC,SAjCN,SAACC,GACDb,EAAe,GACfC,GAAYY,EAAMC,OAAOC,QAgCnBC,aAAc,EANhB,UAQE,wBAAQD,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOE,QAAQ,kBAAkBtC,UAAU,qBAA3C,+BAIF,cAAC,EAAD,CACEP,MAAO,GACPC,QAASA,EACTC,YAAaA,EACbC,aAxDe,SAAC2C,GACpBlB,EAAekB,MAyDb,6BACGhB,EAAU7B,GAASC,EAAc,GAAGe,KAAI,SAAAC,GACvC,OACE,oBAEE,UAAQ,OAFV,wBAIWA,IAHJA,YEtEnB6B,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.17ec5fe5.chunk.js","sourcesContent":["import cn from 'classnames';\n\ntype PaginationProps = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number) => void,\n};\n\nexport const Pagination = ({\n  total, perPage, currentPage, onPageChange,\n}: PaginationProps) => {\n  const createArray = (numberOfPages: number) => {\n    const result = [];\n\n    for (let i = 1; i <= numberOfPages; i += 1) {\n      result.push(i);\n    }\n\n    return result;\n  };\n\n  const lastPage = Math.ceil(total / perPage);\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li className={cn('page-item', {\n          disabled: currentPage === 1,\n        })}\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href={`#${currentPage - 1}`}\n            aria-disabled={currentPage === 1 ? 'true' : 'false'}\n            onClick={() => {\n              if (currentPage !== 1) {\n                onPageChange(currentPage - 1);\n              }\n            }}\n          >\n            «\n          </a>\n        </li>\n\n        {createArray(lastPage).map(number => {\n          return (\n            <li\n              key={number}\n              className={cn('page-item', {\n                active: number === currentPage,\n              })}\n            >\n              <a\n                data-cy=\"pageLink\"\n                className=\"page-link\"\n                href={`#${number}`}\n                onClick={() => {\n                  if (currentPage !== number) {\n                    onPageChange(number);\n                  }\n                }}\n              >\n                {number}\n              </a>\n            </li>\n          );\n        })}\n        <li className={cn('page-item', {\n          disabled: currentPage === lastPage,\n        })}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href={`#${currentPage + 1}`}\n            aria-disabled={currentPage === lastPage\n              ? 'true' : 'false'}\n            onClick={() => {\n              if (currentPage !== lastPage) {\n                onPageChange(currentPage + 1);\n              }\n            }}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\nconst items = getNumbers(1, 42);\n\nexport const App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [perPage, setPerPage] = useState(5);\n\n  const onPageChange = (page: number) => {\n    setCurrentPage(page);\n  };\n\n  const handleChange: React.ChangeEventHandler<HTMLSelectElement>\n    = (event) => {\n      setCurrentPage(1);\n      setPerPage(+event.target.value);\n    };\n\n  const sortPages = (itemsPerPage: number) => {\n    const sortedPages = [];\n\n    for (let i = 0; i < items.length; i += itemsPerPage) {\n      sortedPages.push(items.slice(i, i + itemsPerPage));\n    }\n\n    return sortedPages;\n  };\n\n  const firstItemOnPage = sortPages(perPage)[currentPage - 1].at(0);\n  const lastItemOnPage = sortPages(perPage)[currentPage - 1].at(-1);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstItemOnPage} - ${lastItemOnPage} of 42)`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            name=\"perPageSelector\"\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={handleChange}\n            defaultValue={5}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n      <Pagination\n        total={42}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={onPageChange}\n      />\n      <ul>\n        {sortPages(perPage)[currentPage - 1].map(number => {\n          return (\n            <li\n              key={number}\n              data-cy=\"item\"\n            >\n              {`Item ${number}`}\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}